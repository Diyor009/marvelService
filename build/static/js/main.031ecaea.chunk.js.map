{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/erorrMessage/error.gif","components/erorrMessage/errorMessage.js","components/spinner/spinner.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundery/ErrorBoundery.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffset","getResources","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","ErorrMessage","style","display","width","height","objectFit","margin","src","img","alt","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onErorr","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","erorrMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","erorr","newItemLoading","charEnded","onRequest","onCharlistLoading","onCharlistLoaded","newCharList","ended","lenth","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","errorMessage","length","i","ErrorBoundery","erorrInfo","console","log","children","App","showRandomChar","selectedChar","toggleRandomChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.031ecaea.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","\r\n\r\nclass MarvelService {\r\n   _apiBase = 'https://gateway.marvel.com:443/v1/public/'\r\n   _apiKey = 'apikey=e67b706a726e5bea0e8704bfccab7fc3'\r\n   _baseOffset = 210\r\n\r\n   getResources = async(url) => {\r\n      let res = await fetch(url)\r\n\r\n      if (!res.ok) { \r\n         throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n      }\r\n      return await res.json()\r\n   }\r\n   getAllCharacters = async (offset = this._baseOffset) => {\r\n      const res = await this.getResources(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n      return res.data.results.map(this._transformCharacter)\r\n   }\r\n   getCharacter = async (id) => {\r\n      const res = await this.getResources(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n      return this._transformCharacter(res.data.results[0])\r\n   }\r\n\r\n   _transformCharacter = (char) => {\r\n      return {\r\n         id: char.id,\r\n         name: char.name,\r\n         description: char.description ? `${char.description.slice(0, 210)}...` : 'There is not description for this character',\r\n         thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n         homepage: char.urls[0].url,\r\n         wiki: char.urls[1].url,\r\n         comics: char.comics.items\r\n      }\r\n   }\r\n}\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\r\nconst ErorrMessage = () => {\r\n   return (\r\n      <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}\r\n      src={img} alt=\"Erorr\"/>\r\n   )\r\n}\r\nexport default ErorrMessage;","const Spinner = () => {\r\n   return (\r\n       <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n           <g transform=\"translate(80,50)\">\r\n           <g transform=\"rotate(0)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n           <g transform=\"rotate(45)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(50,80)\">\r\n           <g transform=\"rotate(90)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n           <g transform=\"rotate(135)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(20,50.00000000000001)\">\r\n           <g transform=\"rotate(180)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n           <g transform=\"rotate(225)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(49.99999999999999,20)\">\r\n           <g transform=\"rotate(270)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n           <g transform=\"rotate(315)\">\r\n           <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n           <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n           <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n           </circle>\r\n           </g>\r\n           </g>\r\n       </svg>\r\n   )\r\n}\r\n\r\nexport default Spinner;","import { Component } from 'react';\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport MarvelService from '../../services/MarvelService';\nimport ErorrMessage from '../erorrMessage/errorMessage';\nimport Spinner from '../spinner/spinner';\n\nclass RandomChar extends Component {\n    state = {\n        char: {},\n        loading: true,\n        error: false\n    }\n    marvelService = new MarvelService()\n    componentDidMount(){        \n        this.updateChar()\n        // this.timerId = setInterval(this.updateChar, 4000)\n    }\n    componentWillUnmount(){\n        clearInterval(this.timerId)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {char, \n                loading: false\n            }\n        )\n    }\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    } \n\n    onErorr = () => {\n        this.setState({ \n            loading: false, \n            error: true\n         })\n    }\n    updateChar = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.onCharLoading()\n        this.marvelService\n            .getCharacter(id)\n            .then(this.onCharLoaded)\n            .catch(this.onErorr)\n    }\n    render(){\n        const {char, loading, error} = this.state;\n        const erorrMessage = error ? <ErorrMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? <View char={char}/> : null\n\n        return (\n            <div className=\"randomchar\">\n                {erorrMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\"\n                        onClick={this.updateChar}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n    \n}\n\nconst View = ({char}) => {\n    \n    const {name, description, thumbnail, homepage, wiki} = char\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    \n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description} \n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n} \n\nexport default RandomChar;","import { Component } from 'react';\nimport PropTypes from 'prop-types'\nimport './charList.scss';\nimport Spinner from '../spinner/spinner';\nimport MarvelService from '../../services/MarvelService';\nimport ErorrMessage from '../erorrMessage/errorMessage';\n\n\nclass CharList extends Component {\n    state = {\n        charList: [],\n        loading: true,\n        erorr: false,\n        newItemLoading: false,\n        offset: 1550,\n        charEnded: false\n    }   \n\n    marvelService = new MarvelService()\n\n    componentDidMount(){\n        this.onRequest()\n    }\n    \n    onRequest = (offset) => {\n        this.onCharlistLoading()\n        this.marvelService.getAllCharacters(offset)\n            .then(this.onCharlistLoaded)\n            .catch(this.onErorr)\n    }\n\n    onCharlistLoading = () => {\n        this.setState({\n            newItemLoading: true\n        })\n    } \n\n    onCharlistLoaded = ( newCharList) => {\n        let ended = false\n        if(newCharList.lenth < 9){\n            ended = true\n        }       \n\n        this.setState(({offset, charList}) => ({\n            charList: [...charList, ...newCharList],\n            loading: false,\n            newItemLoading: false, \n            offset: offset + 9,\n            charEnded : ended\n        }))\n    }\n\n    onErorr = () => {\n        this.setState({\n            erorr: true,\n            loading: false\n        })\n    }\n    renderItems(arr){\n        const items = arr.map((item) => {\n            let imgStyle = {'objectFit': \"cover\"}\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n            return (\n                <li className=\"char__item\"\n                    key={item.id}\n                    onClick={() => this.props.onCharSelected(item.id)}\n                    >                                      \n                    <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\n                    <div className=\"char__name\">{item.name}</div>\n                </li>  \n            )\n        })\n        return(\n            <ul className=\"char__grid\">\n                {items}                   \n            </ul>\n        )\n    }\n\n    render() {\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\n        const items = this.renderItems(charList)\n\n        const erorrMessage = error ? <ErorrMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || error) ? items : null\n        return (\n            <div className=\"char__list\">\n                {erorrMessage}\n                {spinner}\n                {content}          \n                <button                    \n                    className=\"button button__main button__long\"\n                    disabled={newItemLoading}\n                    style={{'display': charEnded ? 'none' : 'block'}}\n                    onClick={() => this.onRequest(offset)}>\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n    \n}\nCharList.propTypes = {\n    onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import { Component } from 'react';\nimport PropTypes from 'prop-types'\n\nimport './charInfo.scss';\nimport Spinner from '../spinner/spinner';\nimport ErorrMessage from '../erorrMessage/errorMessage';\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService';\n\nclass CharInfo extends Component {\n\n    state = {\n        char: null,\n        loading: false,\n        erorr: false\n    }\n    marvelService = new MarvelService() \n\n    componentDidMount(){\n        this.updateChar()\n    }\n\n    componentDidUpdate(prevProps){\n        if(this.props.charId !== prevProps.charId){\n            this.updateChar()\n        }\n    }\n    \n    updateChar = () => {\n        const {charId} = this.props;\n        if(!charId) {\n            return;\n        }\n        this.onCharLoading()\n\n        this.marvelService\n            .getCharacter(charId)\n            .then(this.onCharLoaded)\n            .catch(this.onErorr)       \n        // this.foo.bar = 0 \n    }\n\n    onCharLoaded = (char) => {\n        this.setState(\n            {char, \n                loading: false\n            }\n        )\n    }\n    onCharLoading = () => {\n        this.setState({\n            loading: true\n        })\n    }\n\n    onErorr = () => {\n        this.setState({ \n            loading: false, \n            erorr: true\n         })\n    }\n\n    render(){\n        const {char, loading, erorr} = this.state\n        const skeleton = char || loading ||erorr ? null : <Skeleton/>\n        const errorMessage = erorr ? <ErorrMessage/> : null;\n        const spinner = loading ? <Spinner/> : null;\n        const content = !(loading || erorr || !char) ? <View char={char}/> : null\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {errorMessage}\n                {spinner}\n                {content}\n\n            </div>\n        )\n    }    \n}\n\nconst View = ({char}) => {\n    const  {name, description, thumbnail, homepage, wiki, comics} = char\n\n    let imgStyle = {'objectFit' : 'cover'};\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = {'objectFit' : 'contain'};\n    }\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'There is no comics with this character'}\n                {\n                    comics.map((item, i) => {\n                        // eslint-disable-next-line\n                        if(i > 9) return\n                        return (\n                            <li key={i} className=\"char__comics-item\">\n                                {item.name} \n                            </li>\n                        )\n                    })\n                }                    \n            </ul>\n        </>\n    )\n}\n\nCharInfo.propTypes = {\n    charId: PropTypes.number\n}\n\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErorrMessage from \"../erorrMessage/errorMessage\";\r\n\r\n class ErrorBoundery extends Component{\r\n   state ={\r\n      erorr: false\r\n   }\r\n\r\n   static getDerivateStateFromError(erorr){\r\n      return {erorr: true}\r\n   }\r\n\r\n   componentDidCatch(erorr, erorrInfo){\r\n      console.log(erorr, erorrInfo)\r\n      this.setState({\r\n         erorr: true\r\n      })\r\n   }\r\n   render(){\r\n      if(this.state.erorr){\r\n         return(\r\n            <ErorrMessage/>\r\n         )\r\n      }\r\n      return this.props.children\r\n   }\r\n}\r\nexport default ErrorBoundery;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\nimport AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\nimport ErrorBoundery from \"../errorBoundery/ErrorBoundery\";\n\nimport decoration from '../../resources/img/vision.png';\n\nclass App extends Component {\n    state= {\n        showRandomChar: true,\n        selectedChar: null\n    }\n\n    onCharSelected = (id) => {\n        this.setState({ \n            selectedChar: id\n        })\n    }    \n\n    toggleRandomChar = () => {\n        this.setState((state) => {\n            return{\n                showRandomChar: !state.showRandomChar\n            }            \n        }) \n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>   \n                    {this.state.showRandomChar ? <RandomChar/> : null}\n                    <div className=\"char__content\">\n                        <CharList onCharSelected={this.onCharSelected}/>\n                        <ErrorBoundery>\n                            <CharInfo charId={this.state.selectedChar}/>\n                        </ErrorBoundery>\n                        \n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }    \n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}